vector<ll> inv(N);
vector<ll> fact(N);
vector<ll> fact_inv(N);

void init() {
    	inv[1] = 1;
    	for(int i = 2; i < N; i ++) { 
	inv[i] = modL - (modL / i) * inv[modL % i] % modL; 
	}
	fact[0] = 1; fact_inv[0] = 1;
	for(int i = 1; i < N; i ++) { 
		fact[i] = (fact[i - 1] * i) % modL; 
		fact_inv[i] = fact_inv[i - 1] * inv[i] % modL; 
	}
}

ll C(int n, int k){
	if (n < 0 || k < 0) return 0LL; 
	if (n < k) return 0LL; 
	return fact[n] * fact_inv[n - k] % modL * fact_inv[k] % modL;
};

ll C_mod2(int n, int k) { // combi mod 2
	if (k < 0 || k > n) return 0;
	return ((k & ~n) == 0) ? 1 : 0;
}
