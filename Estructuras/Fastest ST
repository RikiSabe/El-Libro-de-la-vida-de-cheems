Node ST[4 * N];
ll A[N];

void build(int node, int l, int r){
    if (l == r){
        ST[node].mx = ST[node].mn = A[l];
        ST[node].mx2 = -infL;
        ST[node].mn2 = infL;
    }
	else{
        int m = (l + r) / 2;
        build(node * 2 + 1, l, m);
        build(node * 2 + 2, m + 1, r);
        ST[node] = merge(ST[node * 2 + 1] , ST[node * 2 + 2]);
    }
}

Node qry(int node, int l, int r, int ql, int qr) {
	if (qr < l || r < ql) return {infL};
    if (ql <= l && r <= qr) return {ST[node]};
	int m = (l + r) / 2;
	Node a = qry(2 * node + 1, l, m, ql, qr);
	Node b = qry(2 * node + 2, m + 1, r, ql, qr);
  return merge(a, b);
}
