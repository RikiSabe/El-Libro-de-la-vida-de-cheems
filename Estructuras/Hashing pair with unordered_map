#include <iostream>
#include <functional>
#include <unordered_map>
#include <utility>

template <typename T1, typename T2>
struct pair_hash {
    size_t operator()(const std::pair<T1, T2>& p) const {
        size_t h1 = std::hash<T1>{}(p.first);
        size_t h2 = std::hash<T2>{}(p.second);
        return h1 ^ (h2 << 1);
    }
};

int main() {
    std::unordered_map<std::pair<int, std::string>, std::string, pair_hash<int, std::string>> map;
    map[std::make_pair(1, "uno")] = "Primer valor";
    map[std::make_pair(2, "dos")] = "Segundo valor";
    
    std::cout << "Valor de (1, 'uno'): " << map[std::make_pair(1, "uno")] << std::endl;
    std::cout << "Valor de (2, 'dos'): " << map[std::make_pair(2, "dos")] << std::endl;

    return 0;
}
